{"version":3,"sources":["components/ToDoItem.js","components/AddToDoItemForm.js","components/ToDoList.js","App.js","index.js"],"names":["ToDoItem","props","toDoItem","onDelete","onCheck","onUncheck","style","done","className","type","checked","onChange","event","target","class","name","onClick","AddToDoItemForm","useState","newTask","setNewTask","onAddNewItem","disabled","onSubmit","preventDefault","newName","value","newToDoTask","maxLength","required","saveState","toDoItems","toItemsString","JSON","stringify","localStorage","setItem","ToDoList","toDoItemString","getItem","parse","restoreFromState","setToDoItems","sortItems","items","sort","itemA","itemB","toDoItemsElements","map","toDoItemIndex","key","itemIndex","itemAfterDeletion","splice","deleteItem","newItems","sortedItems","checkItem","uncheckItem","length","itemAfterAddition","push","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAEaA,EAAW,SAACC,GAAW,IAC3BC,EAA0CD,EAA1CC,SAAUC,EAAgCF,EAAhCE,SAAUC,EAAsBH,EAAtBG,QAASC,EAAaJ,EAAbI,UAS9BC,EAAQ,GAKd,OAJIJ,EAASK,OACXD,EAAK,eAAqB,gBAI1B,yBAAKE,UAAU,kBACb,2BAAOA,UAAY,sBACjB,2BACEC,KAAK,WACLC,QAASR,EAASK,KAClBI,SAnBS,SAACC,GACZA,EAAMC,OAAOH,QACfN,IAEAC,OAiBE,0BAAMS,MAAM,eAGd,0BAAMR,MAAOA,EAAOE,UAAU,mBAAmBN,EAASa,MAC1D,4BAAQC,QAAS,SAACJ,GAAD,OAAWT,KAAYK,UAAU,eAAlD,O,OC3BOS,EAAkB,SAAChB,GAAW,IAAD,EACViB,mBAAS,CACrCH,KAAM,GACNR,MAAM,IAHgC,mBACjCY,EADiC,KACxBC,EADwB,KAMjCC,EAA0BpB,EAA1BoB,aAAcC,EAAYrB,EAAZqB,SAkBrB,OACE,0BAAMC,SAjBS,SAACX,GAChBA,EAAMY,iBACNH,EAAaF,GACbC,EAAW,CACTL,KAAM,GACNR,MAAM,KAYkBC,UAAU,UAClC,2BAAOA,UAAU,aACfC,KAAK,OACLE,SAXmB,SAACC,GACxB,IAAMa,EAAUb,EAAMC,OAAOa,MACvBC,EAAW,eAAOR,GACxBQ,EAAYZ,KAAOU,EACnBL,EAAWO,IAQPD,MAAOP,EAAQJ,KACfa,UAAU,KACVC,UAAQ,EACRP,SAAUA,IAEZ,2BACEb,KAAK,SACLiB,MAAM,cACNlB,UAAU,uCACVc,SAAUA,MChCZQ,EAAY,SAACC,GACjB,IAAMC,EAAgBC,KAAKC,UAAUH,GACrCI,aAAaC,QAJS,cAIgBJ,IAS3BK,EAAW,WAAO,IAAD,EACMnB,mBAPX,WACvB,IAAMoB,EAAiBH,aAAaI,QARd,eAUtB,OADkBN,KAAKO,MAAMF,IACT,GAIuBG,IADf,mBACrBV,EADqB,KACVW,EADU,KAoBtBC,EAAY,SAACC,GACjB,OAAOA,EAAMC,MAAK,SAACC,EAAOC,GACxB,OAAmB,IAAfD,EAAMvC,OAAgC,IAAfwC,EAAMxC,OAGd,IAAfuC,EAAMvC,OAAiC,IAAfwC,EAAMxC,KAFzB,GAKU,IAAfuC,EAAMvC,OAAgC,IAAfwC,EAAMxC,KACxB,GAED,MAoBNyC,EAAoBjB,EAAUkB,KAAI,SAAC/C,EAAUgD,GACjD,OACE,kBAAC,EAAD,CACEC,IAAKD,EACLhD,SAAUA,EACVC,SAAU,SAACS,GAAD,OAtDG,SAACwC,GAClB,IAAMC,EAAiB,YAAOtB,GAC9BsB,EAAkBC,OAAOF,EAAW,GACpCV,EAAaW,GACbvB,EAAUuB,GAkDeE,CAAWL,IAChC9C,QAAS,kBAtBG,SAAC8C,GACjB,IAAMM,EAAQ,YAAOzB,GACrByB,EAASN,GAAe3C,MAAO,EAC/B,IAAMkD,EAAcd,EAAUa,GAC9Bd,EAAae,GACb3B,EAAU2B,GAiBSC,CAAUR,IACzB7C,UAAW,kBAfG,SAAC6C,GACnB,IAAMM,EAAQ,YAAOzB,GACrByB,EAASN,GAAe3C,MAAO,EAC/B,IAAMkD,EAAcd,EAAUa,GAC9Bd,EAAae,GACb3B,EAAU2B,GAUWE,CAAYT,SAInC,OACE,6BACGF,EACD,kBAAC,EAAD,CACE3B,aAzDa,SAACnB,GAClB,KAAI6B,EAAU6B,QAzBM,IAyBpB,CAGA,IAAMC,EAAiB,YAAO9B,GAC9B8B,EAAkBC,KAAK5D,GACvB,IAAMuD,EAAcd,EAAUkB,GAC9BnB,EAAae,GACb3B,EAAU2B,KAkDNnC,SAAUS,EAAU6B,QAlFJ,OCSTG,MATf,WACE,OACE,yBAAKvD,UAAU,4EACb,sCAAW,wCACX,kBAAC,EAAD,QCJNwD,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.49aa3c2a.chunk.js","sourcesContent":["import React from 'react';\n\nexport const ToDoItem = (props) => {\n  const {toDoItem, onDelete, onCheck, onUncheck} = props;\n  const onChange = (event) => {\n    if (event.target.checked) {\n      onCheck();\n    } else {\n      onUncheck();\n    }\n  };\n\n  const style = {};\n  if (toDoItem.done) {\n    style['textDecoration'] = 'line-through';\n  }\n\n  return (\n    <div className=\"added-new-task\">\n      <label className = \"checkbox-container\">\n        <input \n          type=\"checkbox\"\n          checked={toDoItem.done}\n          onChange={onChange} \n        />\n        <span class=\"checkmark\"></span>\n      </label>\n      \n      <span style={style} className=\"to-do-item-name\">{toDoItem.name}</span>\n      <button onClick={(event) => onDelete()} className=\"delete-task\">x</button>\n    </div>\n  )\n};\n","import React, {useState} from 'react';\n\nexport const AddToDoItemForm = (props) => {\n  const [newTask, setNewTask] = useState({\n    name: '',\n    done: false,\n  });\n\n  const {onAddNewItem, disabled} = props;\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n    onAddNewItem(newTask);\n    setNewTask({\n      name: '',\n      done: false,\n    });\n  };\n\n  const onTaskNameChange = (event) => {\n    const newName = event.target.value;\n    const newToDoTask = {...newTask};\n    newToDoTask.name = newName;\n    setNewTask(newToDoTask);\n  };\n\n  return (\n    <form onSubmit={onSubmit} className=\"d-flex\">\n      <input className=\"tasks-text\"\n        type=\"text\" \n        onChange={onTaskNameChange} \n        value={newTask.name}\n        maxLength=\"40\"\n        required\n        disabled={disabled}\n      />\n      <input \n        type=\"submit\" \n        value=\"add new one\" \n        className=\"btn btn-secondary btn-sm add-new-one\"\n        disabled={disabled}\n      />\n    </form>\n  )\n};\n","import React, { useState } from 'react';\nimport { ToDoItem } from './ToDoItem';\nimport { AddToDoItemForm } from './AddToDoItemForm';\n\nconst maxAllowedItems = 10; // not more than 10 items in To Do list.\n\nconst localStorageKey = 'to-do-items';\n\nconst saveState = (toDoItems) => {\n  const toItemsString = JSON.stringify(toDoItems);\n  localStorage.setItem(localStorageKey, toItemsString);\n};\n\nconst restoreFromState = () => {\n  const toDoItemString = localStorage.getItem(localStorageKey);\n  const toDoItems = JSON.parse(toDoItemString);\n  return toDoItems || [];\n};\n\nexport const ToDoList = () => {\n  const [toDoItems, setToDoItems] = useState(restoreFromState());\n  const deleteItem = (itemIndex) => {\n    const itemAfterDeletion = [...toDoItems];\n    itemAfterDeletion.splice(itemIndex, 1);\n    setToDoItems(itemAfterDeletion);\n    saveState(itemAfterDeletion);\n  };\n\n  const addNewItem = (toDoItem) => {\n    if (toDoItems.length >= maxAllowedItems) {\n      return;\n    }\n    const itemAfterAddition = [...toDoItems];\n    itemAfterAddition.push(toDoItem);\n    const sortedItems = sortItems(itemAfterAddition);\n    setToDoItems(sortedItems);\n    saveState(sortedItems);\n  };\n\n  const sortItems = (items) => {\n    return items.sort((itemA, itemB) => {\n      if (itemA.done === true && itemB.done === true) {\n        return 0;\n      }\n      if (itemA.done === false && itemB.done === false) {\n        return 0;\n      }\n      if (itemA.done === true && itemB.done === false) {\n        return 1;\n      }\n      return -1;\n    });\n  };\n\n  const checkItem = (toDoItemIndex) => {\n    const newItems = [...toDoItems];\n    newItems[toDoItemIndex].done = true;\n    const sortedItems = sortItems(newItems);\n    setToDoItems(sortedItems);\n    saveState(sortedItems);\n  };\n\n  const uncheckItem = (toDoItemIndex) => {\n    const newItems = [...toDoItems];\n    newItems[toDoItemIndex].done = false;\n    const sortedItems = sortItems(newItems);\n    setToDoItems(sortedItems);\n    saveState(sortedItems);\n  };\n\n  const toDoItemsElements = toDoItems.map((toDoItem, toDoItemIndex) => {\n    return (\n      <ToDoItem \n        key={toDoItemIndex} \n        toDoItem={toDoItem} \n        onDelete={(event) => deleteItem(toDoItemIndex)} \n        onCheck={() => checkItem(toDoItemIndex)}\n        onUncheck={() => uncheckItem(toDoItemIndex)}\n      />\n    );\n  });\n  return ( \n    <div>\n      {toDoItemsElements}\n      <AddToDoItemForm \n        onAddNewItem={addNewItem} \n        disabled={toDoItems.length >= maxAllowedItems}\n      />\n    </div>\n  );\n};","import React from 'react';\nimport './App.css';\nimport { ToDoList } from './components/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"container-md d-flex flex-column justify-content-start align-items-center\">\n      <h1>things <span>to do</span></h1>\n      <ToDoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}